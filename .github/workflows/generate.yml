name: Auto python

on:
  push:
    paths:
      - '**.py'
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: true

      # BEGIN Dependencies
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: 'x64'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}

      - name: Install python dependencies
        run: |
            pip install -r requirements.txt
      # END Dependencies

      - name: Auth to asciinema
        run: |
            mkdir -p ~/.config/asciinema/
            echo "${ASCIINEMA_KEY}" >> ~/.config/asciinema/install-id
        env:
            ASCIINEMA_KEY: ${{ secrets.ASCIINEMA_KEY }}

      - name: Write pudb config
        run: |
          mkdir -p ~/.config/pudb/
          cat > ~/.config/pudb/pudb.cfg <<-EOF
              [pudb]
              breakpoints_weight = 0
              current_stack_frame = top
              custom_shell = 
              custom_stringifier = 
              custom_theme = 
              default_variables_access_level = public
              display = auto
              hide_cmdline_win = False
              hotkeys_breakpoints = B
              hotkeys_code = C
              hotkeys_stack = S
              hotkeys_variables = V
              line_numbers = True
              prompt_on_quit = True
              seen_welcome = e043
              shell = internal
              sidebar_width = 1
              stack_weight = 1
              stringifier = default
              theme = midnight
              variables_weight = 1
              wrap_variables = True
          EOF

      - name: Record & Upload
        shell: 'script --return --quiet --command "bash {0}"'
        run: |
          stty cols 131 rows 33
          for fn in examples/*.py; do
            asciinema rec -c "python automate.py $fn" --cols 131 --rows 33 -t "Automated Stepping of $fn" $fn.cast;
            asciinema upload "$fn.cast"
          done;
        env:
            TERM: xterm

      - name: Archive asciinema recordings
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: asciinema
          path: |
            examples/*.cast
